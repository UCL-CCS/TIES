name: CI
on: [push]
jobs:
  tests:
    name: Test on ${{ matrix.os }}, üêç=${{ matrix.python-version }}, Program=${{ matrix.conda-env }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8", "3.9"]

    steps:
      - uses: actions/checkout@v3

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a
      - name: Create Environment
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          activate-environment: ties
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          auto-activate-base: false
          show-channel-urls: true
          mamba-version: "*"
          miniforge-version: latest
          miniforge-variant: Mambaforge
          use-mamba: true
      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info
          conda list --show-channel-urls
#   - name: Lint with flake8
#     run: |
#         $CONDA/bin/conda install flake8
#         # stop the build if there are Python syntax errors or undefined names
#         $CONDA/bin/flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         $CONDA/bin/flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Install ties
        shell: bash -l {0}
        run: |
          python -m pip install . --no-deps
          conda list

      - name: Install pytest
        shell: bash -l {0}
        run: |
          pip install pytest

      - name: Test with pytest
        shell: bash -l {0}
        run: |
          cd ties/testing
          python3 -m pytest

  #    - name: Simple Ligand renaming
  #      run: |
  #        cd ties/examples/mol2_2ligands_MCL1
  #        python3 lig_api.py
      - name: Use min API
        shell: bash -l {0}
        run: |
          cd ties/examples/mol2_2ligands_MCL1
          python3 min_api.py
          python3 .test_min_api.py

      - name: Use API
        shell: bash -l {0}
        run: |
          cd ties/examples/mol2_2ligands_MCL1
          python3 api.py

      - name: CMD hybrid
        shell: bash -l {0}
        run: |
          cd ties/examples/mol2_2ligands_MCL1
          ties create -l l02.mol2 l03.mol2 -nc -1 -dir cmdties

      - name: CMD with protein
        shell: bash -l {0}
        run: |
          cd ties/examples/mol2_2ligands_MCL1
          ties create -l l02.mol2 l03.mol2 -nc -1 -dir cmdties_protein -p protein.pdb
