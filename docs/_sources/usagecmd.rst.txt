Examples - Command Line
=======================


TIES can be access via both command line and python interface.

In the command line, we can access it via the **ties** command and request help with::

    ties -h

In the smallest example one can carry out a superimposition
employing only two ligands ::

    ties create -l l03.mol2 l02.mol2

The order the of the ligands matters and
more ligands can be passed.
This command creates by default a **ties** directory
with all output files. These include "meta_*_*.json"
file which contains the details about how the ligands
were superimposed, and what configuration was used.
The general directory structure will look like this::

    ties
    ├── mol2
    │    ├── l02
    │    └── l03
    ├── prep
    │   ├── ligand_frcmods
    │   │   ├── l02
    │   │   └── l03
    │   └── morph_frcmods
    │       └── tests
    │           └── l02_l03
    └── ties-l02-l03
        └── lig
            └── build

Note that all the output generated by ambertools is stored,
and can be investigated.

The full RBFE requires also the protein,
as well as the net charge of the ligands used in the
transformation::

    ties create -l l02.mol2 l03.mol2 -nc -1 -p protein.pdb

With **-nc** standing for net charge, and
with **-p** for the protein. The command above
generates all the RBFE input needed
in order to carry out the simulations with `TIES_MD`_.

.. _TIES_MD: https://ucl-ccs.github.io/TIES_MD/